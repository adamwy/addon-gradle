apply from: 'forge.gradle'

apply plugin: 'java'
apply plugin: 'war'

group = 'org.testproject'
version = '0.7'
sourceCompatibility = '1.5'
targetCompatibility = '1.7'

archiveName 'archiveX'

// Test properties
ext.githubRepo = 'https://github.com/forge/addon-gradle'
ext.organization = 'JBoss'

def dynamicProperty = {
    project.ext.someVersion = '.45'
}

dynamicProperty()

sourceSets {
    main {
        java {
            srcDir 'src/main/interfaces'
        }
        resources {
            srcDir 'src/main/images'
        }
    }
    test {
        java {
            srcDir 'src/test/mocks'
        }
        resources {
            srcDir 'src/test/templates'
        }
    }
}

repositories {
    mavenCentral()
    
    maven {
        url 'http://maven-repo.com/'
    }
}

dependencies {
    direct group: 'org.mockito', name: 'mockito-all'
}

allprojects {
    dependencies {
        managed group: 'org.codehaus.groovy', name: 'groovy', version: '2.1.6', configuration: 'runtime'
        
        def makeManaged = {
            managed group: 'org.mockito', name: 'mockito-all', version: '1.9.5', configuration: 'testRuntime'
        }
        makeManaged()
    }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.slf4j:slf4j-simple:1.7.5'
    
    testCompile 'junit:junit:4.11'
    runtime group: 'com.google.code.guice', name: 'guice', version: '1.0'
    
    def nettyDep = 'org.jboss.netty:netty:3.2.9.Final'
    runtime nettyDep
}

allprojects {
	dependencies {
        managed group: 'org.apache.commons', name: 'commons-exec', version: '1.1', configuration: 'compile'
	}
}

task abc << {
    println 'abc'
}

task ghi << {
    println 'def'
}

(1..5).each {
    task "taskNum$it"
}

task someOutput << {
    def output = new File("$projectDir.path/output.txt").newPrintWriter()
    output.print 'XYZ'
    output.close()
}

test << {
    // This is used to determine whether tests has been run or not
    new File(projectDir, 'test.log').createNewFile()
}

println "Running in $projectDir.path"
